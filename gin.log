[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/ping              --> indoquran-golang/routes.APIRoutes.func1 (3 handlers)
[GIN-debug] GET    /api/v1/hello             --> indoquran-golang/controllers.(*HelloWorldController).Default-fm (3 handlers)
[GIN-debug] POST   /api/v1/signup            --> indoquran-golang/controllers.(*UserController).Signup-fm (3 handlers)
[GIN-debug] Listening and serving HTTP on localhost:8080
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/ping              --> indoquran-golang/routes.APIRoutes.func1 (3 handlers)
[GIN-debug] GET    /api/v1/hello             --> indoquran-golang/controllers.(*HelloWorldController).Default-fm (3 handlers)
[GIN-debug] POST   /api/v1/signup            --> indoquran-golang/controllers.(*UserController).Signup-fm (3 handlers)
[GIN-debug] Listening and serving HTTP on localhost:8080
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/ping              --> indoquran-golang/routes.APIRoutes.func1 (3 handlers)
[GIN-debug] GET    /api/v1/hello             --> indoquran-golang/controllers.(*HelloWorldController).Default-fm (3 handlers)
[GIN-debug] POST   /api/v1/signup            --> indoquran-golang/controllers.(*UserController).Signup-fm (3 handlers)
[GIN-debug] Listening and serving HTTP on localhost:8080
[GIN] 2020/06/01 - 18:22:13 | 200 |            0s |       127.0.0.1 | GET      "/api/v1/hello"
[GIN] 2020/06/01 - 18:22:16 | 200 |            0s |       127.0.0.1 | GET      "/api/v1/hello"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/ping              --> indoquran-golang/routes.APIRoutes.func1 (3 handlers)
[GIN-debug] GET    /api/v1/hello             --> indoquran-golang/controllers.(*HelloWorldController).Default-fm (3 handlers)
[GIN-debug] POST   /api/v1/signup            --> indoquran-golang/controllers.(*UserController).Signup-fm (3 handlers)
[GIN-debug] Listening and serving HTTP on localhost:8080
[GIN] 2020/06/01 - 18:24:35 | 200 |            0s |       127.0.0.1 | GET      "/api/v1/hello"
[GIN-debug] [WARNING] Creating an Engine instance with the Logger and Recovery middleware already attached.

[GIN-debug] [WARNING] Running in "debug" mode. Switch to "release" mode in production.
 - using env:	export GIN_MODE=release
 - using code:	gin.SetMode(gin.ReleaseMode)

[GIN-debug] GET    /api/v1/ping              --> indoquran-golang/routes.APIRoutes.func1 (3 handlers)
[GIN-debug] GET    /api/v1/hello             --> indoquran-golang/controllers.(*HelloWorldController).Default-fm (3 handlers)
[GIN-debug] POST   /api/v1/signup            --> indoquran-golang/controllers.(*UserController).Signup-fm (3 handlers)
[GIN-debug] POST   /api/v1/login             --> indoquran-golang/controllers.(*UserController).Login-fm (3 handlers)
[GIN-debug] Listening and serving HTTP on localhost:8080
[GIN] 2020/06/01 - 18:34:26 | 404 |            0s |       127.0.0.1 | GET      "/api/v1/login"
[GIN] 2020/06/01 - 18:46:26 | 200 |     89.9968ms |       127.0.0.1 | POST     "/api/v1/login"
